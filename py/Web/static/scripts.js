// Generated by CoffeeScript 1.8.0
(function() {
  var $human_count, draw_state, read_with_status;

  read_with_status = function($url) {
    var $response;
    $response = {};
    $.ajax({
      type: 'GET',
      url: $url,
      async: false,
      complete: function($data) {
        return $response = {
          text: $data.responseText,
          status: $data.status
        };
      }
    });
    return $response;
  };

  $human_count = 0;

  draw_state = function() {
    var $content, $human_color, $info, $organism, $request, _i, _j, _len, _len1, _results;
    $request = read_with_status('/organisms');
    $content = JSON.parse($request.text);
    $human_color = read_with_status('/human-color').text;
    $human_count = 0;
    $('td').css('background', '#fff');
    for (_i = 0, _len = $content.length; _i < _len; _i++) {
      $organism = $content[_i];
      $organism = JSON.parse($organism);
      $('td[data-x="' + $organism[0] + '"][data-y="' + $organism[1] + '"]').css('background', $organism[2]);
      if ($human_color === $organism[2]) {
        ++$human_color;
      }
    }
    $request = read_with_status('/log');
    $content = JSON.parse($request.text);
    $('#info-panel').find('p').remove();
    _results = [];
    for (_j = 0, _len1 = $content.length; _j < _len1; _j++) {
      $info = $content[_j];
      _results.push($('#info-panel').append('<p>' + $info + '</p>'));
    }
    return _results;
  };

  $(function() {
    draw_state();
    $('td').on('click', function() {
      console.log($(this).data('x'));
      return console.log($(this).data('y'));
    });
    return $('button#next-round').on('click', function() {
      read_with_status('next-round');
      return draw_state();
    });
  });

}).call(this);

//# sourceMappingURL=scripts.js.map
